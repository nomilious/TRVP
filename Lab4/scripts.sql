-- DB & tables 
CREATE TABLE TASKLISTS (
    ID UUID PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    POSITION INTEGER NOT NULL CHECK(POSITION >= 0),
    TASKS UUID [] DEFAULT '{}'
);

CREATE TABLE TASKS (
    ID UUID PRIMARY KEY,
    TEXT VARCHAR(200) NOT NULL,
    POSITION INTEGER NOT NULL CHECK(POSITION >= 0),
    TASKLIST_ID UUID REFERENCES TASKLISTS
);

-- User(actions: SELECT, INSERT, UPDATE, DELETE)
CREATE ROLE tm_admin LOGIN ENCRYPTED PASSWORD 'admin';
GRANT SELECT, INSERT, UPDATE, DELETE ON TASKS, TASKLISTS TO tm_admin;

-- sql queries
SELECT * FROM TASKLISTS ORDER BY POSITION;
SELECT * FROM TASKS ORDER BY TASKLIST_ID, POSITION;

INSERT INTO TASKLISTS (ID, NAME, POSITION), VALUES (<ID>, <NAME>, <POSITION>);

INSERT INTO TASKS (ID, TEXT, POSITION, TASKLIST_ID), VALUES (<TASK_ID>, <NAME>, <POSITION>, <TASKLIST_ID>);
UPDATE TASKLISTS SET TASKS = ARRAY_APPEND(TASKS, <TASK_ID>) WHERE ID =<TASKLIST_ID>;

UPDATE TASKS SET TEXT = <TEXT>, POSITION = <POSITION> WHERE ID = <TASK_ID>;

UPDATE TASKLISTS SET TASKS = ARRAY_REMOVE(TASKS, <TASK_ID>) WHERE ID =<TASKLIST_ID>;
DELETE TASKS WHERE ID = <TASK_ID>;

UPDATE TASKS SET TASKLIST_ID = <DEST_ID> WHERE ID = <TASK_ID>;
UPDATE TASKLISTS SET TASKS = ARRAY_APPEND(TASKS, <TASK_ID>) WHERE ID = <DEST_ID>;
UPDATE TASKLISTS SET TASKS = ARRAY_REMOVE(TASKS, <TASK_ID>) WHERE ID = <SRC_ID>;
